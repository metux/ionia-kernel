/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	cpus {
		cpu@0 {
			cpu0-supply = <&vdd1_reg>;
		};
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256 MB */
	};

	chosen {
		stdout-path = &uart0;
	};

	vbat: fixedregulator0 {
		compatible = "regulator-fixed";
		regulator-name = "vbat";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
	};

	lis3_reg: fixedregulator1 {
		compatible = "regulator-fixed";
		regulator-name = "lis3_reg";
		regulator-boot-on;
	};

	wlan_en_reg: fixedregulator2 {
		compatible = "regulator-fixed";
		regulator-name = "wlan-en-regulator";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;

		/* WLAN_EN GPIO for this board - Bank1, pin16 */
		gpio = <&gpio1 16 0>;

		/* WLAN card specific delay */
		startup-delay-us = <70000>;
		enable-active-high;
	};

	backplane: backplane@018000000 {
		compatible = "duagon,ionia-backplane";
		reg = <0x18000000 4000000>;	// 64 MB - async area
		// sync area 0x1C000000..0x1FFFFFFF

		slots {
			#address-cells = <1>;
			#size-cells = <1>;

			slot0: slot0@000 {
				reg = <0x000 0x08>;
				label = "bp channel 0";
			};
			slot1: slot0@010 {
				reg = <0x010 0x08>;
				label = "bp channel 0";
			};
			slot2: slot0@020 {
				reg = <0x020 0x08>;
				label = "bp channel 2";
			};
			slot3: slot0@030 {
				reg = <0x030 0x08>;
				label = "bp channel 3";
			};
			slot4: slot0@040 {
				reg = <0x040 0x08>;
				label = "bp channel 4";
			};
			slot5: slot0@050 {
				reg = <0x050 0x08>;
				label = "bp channel 5";
			};
			slot6: slot0@060 {
				reg = <0x060 0x08>;
				label = "bp channel 6";
			};
			slot7: slot0@070 {
				reg = <0x070 0x08>;
				label = "bp channel 7";
			};
			slot8: slot0@080 {
				reg = <0x080 0x08>;
				label = "bp channel 8";
			};
			slot9: slot0@090 {
				reg = <0x090 0x08>;
				label = "bp channel 9";
			};
			slot10: slot0@0a0 {
				reg = <0x0a0 0x08>;
				label = "bp channel 10";
			};
			slot11: slot0@0b0 {
				reg = <0x0b0 0x08>;
				label = "bp channel 11";
			};
			slot12: slot0@0c0 {
				reg = <0x0c0 0x08>;
				label = "bp channel 12";
			};
			slot13: slot0@0d0 {
				reg = <0x0d0 0x08>;
				label = "bp channel 13";
			};
			slot14: slot0@0e0 {
				reg = <0x0e0 0x08>;
				label = "bp channel 14";
			};
			slot15: slot0@0f0 {
				reg = <0x0f0 0x08>;
				label = "bp channel 15";
			};
			slot16: slot0@100 {
				reg = <0x100 0x08>;
				label = "bp channel 16";
			};
			slot17: slot0@110 {
				reg = <0x110 0x08>;
				label = "bp channel 17";
			};
			slot18: slot0@120 {
				reg = <0x120 0x08>;
				label = "bp channel 18";
			};
			slot19: slot0@130 {
				reg = <0x130 0x08>;
				label = "bp channel 19";
			};
			slot20: slot0@140 {
				reg = <0x140 0x08>;
				label = "bp channel 20";
			};
			slot21: slot0@150 {
				reg = <0x150 0x08>;
				label = "bp channel 21";
			};
			slot22: slot0@160 {
				reg = <0x160 0x08>;
				label = "bp channel 22";
			};
			slot23: slot0@180 {
				reg = <0x180 0x08>;
				label = "bp channel 23";
			};
			slot24: slot0@190 {
				reg = <0x190 0x08>;
				label = "bp channel 24";
			};
		};
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&clkout2_pin>;

	/* Module pin mux for SPI flash */
	/* FIXME: still needed ? daughter board ? */
	spi0_pins: spi0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* spi0_sclk.spi0_sclk */
			AM33XX_IOPAD(0x954, PIN_INPUT_PULLUP | MUX_MODE0)	/* spi0_d0.spi0_d0 */
			AM33XX_IOPAD(0x958, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* spi0_d1.spi0_d1 */
			AM33XX_IOPAD(0x95c, PIN_INPUT_PULLUP | MUX_MODE0)	/* spi0_cs0.spi0_cs0 */
		>;
	};

	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x988, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
			AM33XX_IOPAD(0x98c, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x978, PIN_INPUT_PULLUP | SLEWCTRL_SLOW | MUX_MODE2)	/* uart1_ctsn.i2c1_sda */
			AM33XX_IOPAD(0x97c, PIN_INPUT_PULLUP | SLEWCTRL_SLOW | MUX_MODE2)	/* uart1_rtsn.i2c1_scl */
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x970, PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			AM33XX_IOPAD(0x974, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};

	/* hand out clkout2 clock to peripherals (codecs ? gpmc ?) */
	clkout2_pin: pinmux_clkout2_pin {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9b4, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr1.clkout2 */
		>;
	};

	/* FIXME: really neeeded ? */
	ecap0_pins: backlight_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x964, MUX_MODE0)	/* eCAP0_in_PWM0_out.eCAP0_in_PWM0_out */
		>;
	};

	/* FIXME: separate them by board ? */
	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			// FIXME: should we really map them to gpios ?
			AM33XX_IOPAD(0x914, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x918, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x91c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x920, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x924, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x928, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x92c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x930, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x934, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x938, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x93c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x940, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLUP | MUX_MODE0)	/* mdio_data.mdio_data */
			AM33XX_IOPAD(0x94c, PIN_OUTPUT_PULLUP | MUX_MODE0)	/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x94c, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	usb0_pins: pinmux_usb0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x0A1C, MUX_MODE0 | PIN_OUTPUT_PULLDOWN)	/* usb0_drvvbus.usb0_drvvbus */
		>;
	};

	usb1_pins: pinmux_usb1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x0A34, MUX_MODE0 | PIN_OUTPUT_PULLDOWN)	/* usb1_drvvbus.usb1_drvvbus */
		>;
	};

	// FIXME: check IO directions
	dcan1_pins_default: dcan1_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x980, MUX_MODE2 | PIN_INPUT_PULLUP)	/* uart1_txd.dcan1_rx */
			AM33XX_IOPAD(0x984, MUX_MODE2 | PIN_INPUT_PULLUP)	/* uart1_rxd.dcan1_tx */
		>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;

	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	status = "okay";
	clock-frequency = <400000>;

	tps: tps@2d {
		reg = <0x2d>;
	};
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0_phy {
	status = "okay";
};

&usb1_phy {
	status = "okay";
};

&usb0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&usb0_pins>;
};

&usb1 {
	status = "okay";
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&usb1_pins>;
};

&cppi41dma  {
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	status = "okay";
	clock-frequency = <100000>;

	lis331dlh: lis331dlh@18 {
		compatible = "st,lis331dlh", "st,lis3lv02d";
		reg = <0x18>;
		Vdd-supply = <&lis3_reg>;
		Vdd_IO-supply = <&lis3_reg>;

		st,click-single-x;
		st,click-single-y;
		st,click-single-z;
		st,click-thresh-x = <10>;
		st,click-thresh-y = <10>;
		st,click-thresh-z = <10>;
		st,irq1-click;
		st,irq2-click;
		st,wakeup-x-lo;
		st,wakeup-x-hi;
		st,wakeup-y-lo;
		st,wakeup-y-hi;
		st,wakeup-z-lo;
		st,wakeup-z-hi;
		st,min-limit-x = <120>;
		st,min-limit-y = <120>;
		st,min-limit-z = <140>;
		st,max-limit-x = <550>;
		st,max-limit-y = <550>;
		st,max-limit-z = <750>;
	};

	tsl2550: tsl2550@39 {
		compatible = "taos,tsl2550";
		reg = <0x39>;
	};

	tmp275: tmp275@48 {
		compatible = "ti,tmp275";
		reg = <0x48>;
	};

	tlv320aic3106: tlv320aic3106@1b {
		#sound-dai-cells = <0>;
		compatible = "ti,tlv320aic3106";
		reg = <0x1b>;
		status = "okay";

		/* Regulators */
		AVDD-supply = <&vaux2_reg>;
		IOVDD-supply = <&vaux2_reg>;
		DRVDD-supply = <&vaux2_reg>;
		DVDD-supply = <&vbat>;
	};
};

&lcdc {
	status = "disable";
	blue-and-red-wiring = "crossed";
};

&elm {
	status = "okay";
};

&epwmss0 {
	status = "okay";

	ecap0: ecap@48300100 {
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&ecap0_pins>;
	};
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&nandflash_pins_s0>;
#if 0
	ranges = <0 0 0x08000000 0x1000000	/* CS0: 16MB for NAND */
		  2 0 0x18000000 0x4000000	/* CS2: 64MB for FPGA async */
		  3 0 0x1C000000 0x4000000>;	/* CS3: 64MB for FPGA sync */*
#else
	ranges = <0 0 0x08000000 0x1000000>;	/* CS0: 16MB for NAND */
#endif
	nand0: nand@0,0 {
		compatible = "ti,omap2-nand";
		reg = <0 0 4>; /* CS0, offset 0, IO size 4 */
		interrupt-parent = <&gpmc>;
		interrupts = <0 IRQ_TYPE_NONE>, /* fifoevent */
			     <1 IRQ_TYPE_NONE>;	/* termcount */
		rb-gpios = <&gpmc 0 GPIO_ACTIVE_HIGH>; /* gpmc_wait0 */ // FIXME
		ti,nand-ecc-opt = "bch8";
		ti,elm-id = <&elm>;
		nand-bus-width = <8>;
		gpmc,device-width = <1>;
		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <44>;
		gpmc,cs-wr-off-ns = <44>;
		gpmc,adv-on-ns = <6>;
		gpmc,adv-rd-off-ns = <34>;
		gpmc,adv-wr-off-ns = <44>;
		gpmc,we-on-ns = <0>;
		gpmc,we-off-ns = <40>;
		gpmc,oe-on-ns = <0>;
		gpmc,oe-off-ns = <54>;
		gpmc,access-ns = <64>;
		gpmc,rd-cycle-ns = <82>;
		gpmc,wr-cycle-ns = <82>;
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wr-access-ns = <40>;
		gpmc,wr-data-mux-bus-ns = <0>;
		/* MTD partition table */
		/* All SPL-* partitions are sized to minimal length
		 * which can be independently programmable. For
		 * NAND flash this is equal to size of erase-block */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "/dev/mtd10 U Boot SPL 1";
			reg = <0x000000000 0x000080000>;
		};
		partition@1 {
			label = "/dev/mtd11 U-Boot 1";
			reg = <0x000080000 0x000080000>;
		};
		partition@2 {
			label = "/dev/mtd12 U-Boot Env 1_1";
			reg = <0x000100000 0x000080000>;
		};
		partition@3 {
			label = "/dev/mtd13 U-Boot Env 1_2";
			reg = <0x000180000 0x000080000>;
		};
		partition@4 {
			label = "/dev/mtd14 Kernel 1";
			reg = <0x000200000 0x000e00000>;
		};
		partition@5 {
			label = "/dev/mtd15 File System";
			reg = <0x001000000 0x01f000000>;
		};
		partition@6 {
			label = "/dev/mtd16 U Boot SPL 2";
			reg = <0x020000000 0x000080000>;
		};
		partition@7 {
			label = "/dev/mtd17 U-Boot 2";
			reg = <0x020080000 0x000080000>;
		};
		partition@8 {
			label = "/dev/mtd18 U-Boot Env 2_1";
			reg = <0x020100000 0x000080000>;
		};
		partition@9 {
			label = "/dev/mtd19 U-Boot Env 2_2";
			reg = <0x020180000 0x000080000>;
		};
		partition@10 {
			label = "/dev/mtd20 Kernel 2";
			reg = <0x020200000 0x000e00000>;
		};
		partition@11 {
			label = "/dev/mtd21 File System";
			reg = <0x021000000 0x01f000000>;
		};
	};

#if 0
	backplane: backplane@018000000 {
		compatible = "duagon,i101-backplane";
		// FIXME
		reg = <2 0 4>; /* CS2, offset 0, IO size 4 */

		/* config1 */
		gpmc,burst-length	= <4>;
		gpmc,device-width	= <2>;
		gpmc,mux-add-data	= <2>;
		gpmc,wait-pin		= <0>;
		// gpmc clock 	= 1/2 fclk (GPMCFCLKDIVIDER=1)

		/* config2 */
		gpmc,cs-wr-off-ns	= <44>;	// FIXME: 7 fclk cylces
		gpmc,cs-rd-off-ns	= <44>;	// FIXME: 11 fclk cycles
		gpmc,cs-on-ns		= <0>;
		// CSEXTRADELAY		= 0

		/* config3 */
		gpmc,adv-rd-off-ns	= <34>;	// FIXME: 3 fclk cycles
		gpmc,adv-wr-off-ns	= <44>;	// FIXME: 3 fclk cycles
		gpmc,adv-on-ns		= <6>;	// FIXME: 1 fclk cycles

		/* config4 */
		gpmc,we-off-ns		= <40>;	// FIXME: 7 fclk cycles
		gpmc,we-on-ns		= <0>;	// FIXME: 3 fclk cycles
		gpmc,oe-off-ns		= <54>;	// FIXME: 11 fclk cycles
		gpmc,oe-on-ns		= <0>;	// FIXME: 3 fclk cycles
		// WEEXTRADELAY		= 0
		// OEAADMUXOFFTIME	= 3
		// OEEXTRADELAY		= 0
		// OEAADMUXONTIME	= 1

		/* config5 */
		// PAGEBURSTACCESSTIME=1
		gpmc,rd-cycle-ns		= <82>;	// FIXME: 8 fclk cycles
		gpmc,wr-cycle-ns		= <82>;	// FIXME: 8 fclk cycles
		gpmc,access-ns			= <64>;	// FIXME: 10 fclk cycles

		/* config6 */
		gpmc,wr-access-ns		= <40>;	// FIXME: 4 fclk cycles
		gpmc,bus-turnaround-ns		= <0>;	// FIXME: 1 fclk cycles
		gpmc,cycle2cycle-delay-ns	= <0>;	// FIXME: 1 fclk cycles
		// WRACCESSTIME = 4
		// WRDATAONADMUXBUS = 3

		/* config7 */
		// MASKADDRESS = 12 (64mbytes)
		// CSVALID = 1 -> CSn enabled
		// BASEADDRESS = 0x18 (<<24)
		gpmc,clk-activation-ns = <0>;	// ??

		gpmc,wr-data-mux-bus-ns		= <0>;	// FIXME: 3 fclk cylces
		#address-cells = <1>;
		#size-cells = <1>;
	};
#endif
};

#include "tps65910.dtsi"

&tps {
	vcc1-supply = <&vbat>;
	vcc2-supply = <&vbat>;
	vcc3-supply = <&vbat>;
	vcc4-supply = <&vbat>;
	vcc5-supply = <&vbat>;
	vcc6-supply = <&vbat>;
	vcc7-supply = <&vbat>;
	vccio-supply = <&vbat>;

	regulators {
		vrtc_reg: regulator@0 {
			regulator-always-on;
		};

		vio_reg: regulator@1 {
			regulator-always-on;
		};

		vdd1_reg: regulator@2 {
			/* VDD_MPU voltage limits 0.95V - 1.26V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1351500>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd2_reg: regulator@3 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd3_reg: regulator@4 {
			regulator-always-on;
		};

		vdig1_reg: regulator@5 {
			regulator-always-on;
		};

		vdig2_reg: regulator@6 {
			regulator-always-on;
		};

		vpll_reg: regulator@7 {
			regulator-always-on;
		};

		vdac_reg: regulator@8 {
			regulator-always-on;
		};

		vaux1_reg: regulator@9 {
			regulator-always-on;
		};

		vaux2_reg: regulator@10 {
			regulator-always-on;
		};

		vaux33_reg: regulator@11 {
			regulator-always-on;
		};

		vmmc_reg: regulator@12 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
	};
};

&mac {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	slaves = <1>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";
};

&phy_sel {
	rmii-clock-ext;		// clock provided by PHY
};

&tscadc {
	status = "okay";
	tsc {
		ti,wires = <4>;
		ti,x-plate-resistance = <200>;
		ti,coordinate-readouts = <5>;
		ti,wire-config = <0x00 0x11 0x22 0x33>;
		ti,charge-delay = <0x400>;
	};

	adc {
		ti,adc-channels = <4 5 6 7>;
	};
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

&dcan1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan1_pins_default>;
};

&rtc {
	clocks = <&clk_32768_ck>, <&clkdiv32k_ick>;
	clock-names = "ext-clk", "int-clk";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	status = "okay";

	serial_flash: m25p80@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "micron,n25q064", "jedec,spi-nor";
		reg = <0x0>;
		spi-max-frequency = <24000000>;
#if 0
		m25p,fast-read;
#endif
		status = "okay";

		partition@0 {
			label = "/dev/mtd0 U Boot SPL 1";
			reg = <0x0 0x20000>;
		};

		partition@1 {
			label = "/dev/mtd1 U-Boot 1";
			reg = <0x20000 0x40000>;
		};

		partition@2 {
			label = "/dev/mtd2 U-Boot Env 1";
			reg = <0x60000 0x10000>;
		};

		partition@3 {
			label = "/dev/mtd3 U-Boot Env 2";
			reg = <0x70000 0x10000>;
		};

		partition@4 {
			label = "/dev/mtd4 Kernel 1";
			reg = <0x80000 0x380000>;
		};

		partition@5 {
			label = "/dev/mtd5 U Boot SPL 2";
			reg = <0x400000 0x20000>;
		};

		partition@6 {
			label = "/dev/mtd6 U-Boot 2";
			reg = <0x420000 0x40000>;
		};

		partition@7 {
			label = "/dev/mtd7 U-Boot Env 3";
			reg = <0x460000 0x10000>;
		};

		partition@8 {
			label = "/dev/mtd8 U-Boot Env 4";
			reg = <0x470000 0x10000>;
		};

		partition@9 {
			label = "/dev/mtd9 Kernel 2";
			reg = <0x480000 0x380000>;
		};
	};
};
